name: Deploying Medusa Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Public ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build Docker image
        run: docker build -f ./dockerfile -t medusa-backend ./medusa-backend

      - name: Tag Docker image
        run: docker tag medusa-backend:latest public.ecr.aws/v7f0w4r6/medusa-backend:latest

      - name: Push Docker image
        run: docker push public.ecr.aws/v7f0w4r6/medusa-backend:latest

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Import ECR Repository (optional safe import)
        working-directory: ./terraform
        run: terraform import aws_ecr_repository.medusaImage_repo medusa-backend || echo "Public ECR repo already managed"

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -auto-approve -var="DB_password=${{ secrets.DB_PASSWORD }}"

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="DB_password=${{ secrets.DB_PASSWORD }}"
